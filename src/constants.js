import _ from 'lodash'

let LANGUAGE = {}
export const setLanguage = (data) => (LANGUAGE = data)
export const getLanguage = () => LANGUAGE

let objktBlockList = []
export const setObjktBlockList = (data) => (objktBlockList = data)
export const getObjktBlockList = () => objktBlockList

let walletBlockList = []

export const setWalletBlockList = (restrictedLists, permittedLists) => {
  const walletAllowList = _.flatten(permittedLists)

  // Override with permitted list
  walletBlockList = _.flatten(restrictedLists).filter(
    (account) => !walletAllowList.includes(account)
  )
}
export const getWalletBlockList = () => walletBlockList

let banBlockList = []
export const setBanBlockList = (data) => (banBlockList = data)
export const getBanBlockList = () => banBlockList

let logoList = []
export const setLogoList = (data) => {
  // Shuffles the list daily
  let logos = data.logos
  let currentIndex = logos.length,
    temporaryValue,
    randomIndex
  const date = new Date(Date.now())
  let day =
    (Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()) -
      Date.UTC(date.getFullYear(), 0, 0)) /
    24 /
    60 /
    60 /
    1000
  let random = function () {
    var x = Math.sin(day++) * 10000
    return x - Math.floor(x)
  }

  while (0 !== currentIndex) {
    randomIndex = Math.floor(random() * currentIndex)
    currentIndex -= 1
    //swap
    temporaryValue = logos[currentIndex]
    logos[currentIndex] = logos[randomIndex]
    logos[randomIndex] = temporaryValue
  }

  logoList = logos
}
export const getLogoList = () => logoList

export const PATH = {
  FEED: '/',
  ISSUER: '/tz',
  COLLAB: '/kt',
  ABOUT: '/about',
  FAQ: '/faq',
  SYNC: '/sync',
  MINT: '/mint',
  OBJKT: '/objkt',
  GALLERY: '/gallery',
  TAGS: '/tags',
}

export const MINT_MIN_LIMIT = 1
export const MINT_MAX_LIMIT = 10000
export const MINT_FILESIZE = 100

export const MIMETYPE = {
  BMP: 'image/bmp',
  GIF: 'image/gif',
  JPEG: 'image/jpeg',
  PNG: 'image/png',
  SVG: 'image/svg+xml',
  TIFF: 'image/tiff',
  WEBP: 'image/webp',
  MP4: 'video/mp4',
  OGV: 'video/ogg',
  QUICKTIME: 'video/quicktime',
  WEBM: 'video/webm',
  GLB: 'model/gltf-binary',
  GLTF: 'model/gltf+json',
  MP3: 'audio/mpeg',
  OGA: 'audio/ogg',
  WAV: 'audio/wav',
  XWAV: 'audio/x-wav',
  FLAC: 'audio/flac',
  PDF: 'application/pdf',
  ZIP: 'application/zip',
  ZIP1: 'application/x-zip-compressed',
  ZIP2: 'multipart/x-zip',
  MD: 'text/markdown',
}

export const IPFS_DIRECTORY_MIMETYPE = 'application/x-directory'

export const ALLOWED_MIMETYPES = Object.keys(MIMETYPE)
  .map((k) => MIMETYPE[k])
  .filter((e) => e !== MIMETYPE.GLTF) // disabling GLTF from new updates

export const ALLOWED_FILETYPES_LABEL = Object.entries(MIMETYPE)
  .filter((e) => ALLOWED_MIMETYPES.includes(e[1]))
  .filter(
    (e) =>
      ![
        'ZIP1',
        'ZIP2',
        'OGA',
        'OGV',
        'BMP',
        'TIFF',
        'XWAV',
        'QUICKTIME',
        'WEBP',
      ].includes(e[0])
  )
  .map((e) => (e[0] === 'ZIP' ? 'HTML (ZIP ARCHIVE)' : e[0]))
  .join(', ')

export const ALLOWED_COVER_MIMETYPES = [
  MIMETYPE.JPEG,
  MIMETYPE.PNG,
  MIMETYPE.GIF,
  MIMETYPE.MP4,
]

export const ALLOWED_COVER_FILETYPES_LABEL = ['jpeg, png, gif']

export const MAX_EDITIONS = 10000 // Limited by contract

export const MIN_ROYALTIES = 10 // Limited by contract

export const MAX_ROYALTIES = 25 // Limited by contract

export const IPFS_DEFAULT_THUMBNAIL_URI =
  'ipfs://QmNrhZHUaEqxhyLfqoq1mtHSipkWHeT31LNHb1QEbDHgnc'

export const MARKETPLACE_CONTRACT_V1 = 'KT1Hkg5qeNhfwpKW4fXvq7HGZB9z2EnmCCA9'
export const MARKETPLACE_CONTRACT_V2 = 'KT1HbQepzV1nVGg8QVznG7z4RcHseD5kwqBn'
export const MARKETPLACE_CONTRACT_TEIA = 'KT1PHubm9HtyQEJ4BBpMTVomq6mhbfNZ9z5w'

export const MARKETPLACE_CONTRACT_OBJKTCOM_V1 =
  'KT1FvqJwEDWb1Gwc55Jd1jjTHRVWbYKUUpyq'
export const MARKETPLACE_CONTRACT_OBJKTCOM_V4 =
  'KT1WvzYHCNBvDSdwafTHv7nJ1dWmZ8GCYuuC'

export const HEN_CONTRACT_FA2 = 'KT1RJ6PbjHpwc3M5rw5s2Nbmefwbuwbdxton'

export const SUPPORTED_MARKETPLACE_CONTRACTS = [
  MARKETPLACE_CONTRACT_V2,
  MARKETPLACE_CONTRACT_TEIA,
]

export const SWAP_TYPE_TEIA = 'TEIA'
export const SWAP_TYPE_HEN = 'HEN'

export const MAIN_MARKETPLACE_CONTRACT = MARKETPLACE_CONTRACT_TEIA // the one that is used for swapping
export const MAIN_MARKETPLACE_CONTRACT_SWAP_TYPE = SWAP_TYPE_TEIA

export const BURN_ADDRESS = 'tz1burnburnburnburnburnburnburjAYjjX'

export const COVER_COMPRESSOR_OPTIONS = {
  quality: 0.85,
  maxWidth: 1024,
  maxHeight: 1024,
}

export const THUMBNAIL_COMPRESSOR_OPTIONS = {
  quality: 0.85,
  maxWidth: 350,
  maxHeight: 350,
}

export const LICENSE_TYPES = {
  none: 'None',
  'cc-by-4.0': 'CC-BY-4.0 (Attribution)',
  'cc-by-sa-4.0': 'CC BY-SA 4.0 (Attribution ShareAlike)',
  'cc-by-nd-4.0': 'CC BY-ND 4.0 (Attribution-NoDerivs)',
  'cc-by-nc-4.0': 'CC BY-NC 4.0 (Attribution-NonCommercial)',
  'cc-by-nc-sa-4.0': 'CC BY-NC-SA 4.0 (Attribution-NonCommercial-ShareAlike)',
  'cc-by-nc-nd-4.0': 'CC BY-NC-ND 4.0 (Attribution-NonCommercial-NoDerivs)',
  custom: 'Custom (Specify)',
}

export const LANGUAGES = {
  none: 'None',
  AD: 'ğŸ‡¦ğŸ‡© Andorra',
  AE: 'ğŸ‡¦ğŸ‡ª United Arab Emirates',
  AF: 'ğŸ‡¦ğŸ‡« Afghanistan',
  AG: 'ğŸ‡¦ğŸ‡¬ Antigua and Barbuda',
  AI: 'ğŸ‡¦ğŸ‡® Anguilla',
  AL: 'ğŸ‡¦ğŸ‡± Albania',
  AM: 'ğŸ‡¦ğŸ‡² Armenia',
  AO: 'ğŸ‡¦ğŸ‡´ Angola',
  AQ: 'ğŸ‡¦ğŸ‡¶ Antarctica',
  AR: 'ğŸ‡¦ğŸ‡· Argentina',
  AS: 'ğŸ‡¦ğŸ‡¸ American Samoa',
  AT: 'ğŸ‡¦ğŸ‡¹ Austria',
  AU: 'ğŸ‡¦ğŸ‡º Australia',
  AW: 'ğŸ‡¦ğŸ‡¼ Aruba',
  AX: 'ğŸ‡¦ğŸ‡½ Ã…land Islands',
  AZ: 'ğŸ‡¦ğŸ‡¿ Azerbaijan',
  BA: 'ğŸ‡§ğŸ‡¦ Bosnia and Herzegovina',
  BB: 'ğŸ‡§ğŸ‡§ Barbados',
  BD: 'ğŸ‡§ğŸ‡© Bangladesh',
  BE: 'ğŸ‡§ğŸ‡ª Belgium',
  BF: 'ğŸ‡§ğŸ‡« Burkina Faso',
  BG: 'ğŸ‡§ğŸ‡¬ Bulgaria',
  BH: 'ğŸ‡§ğŸ‡­ Bahrain',
  BI: 'ğŸ‡§ğŸ‡® Burundi',
  BJ: 'ğŸ‡§ğŸ‡¯ Benin',
  BL: 'ğŸ‡§ğŸ‡± Saint BarthÃ©lemy',
  BM: 'ğŸ‡§ğŸ‡² Bermuda',
  BN: 'ğŸ‡§ğŸ‡³ Brunei Darussalam',
  BO: 'ğŸ‡§ğŸ‡´ Bolivia',
  BQ: 'ğŸ‡§ğŸ‡¶ Bonaire',
  BR: 'ğŸ‡§ğŸ‡· Brazil',
  BS: 'ğŸ‡§ğŸ‡¸ Bahamas',
  BT: 'ğŸ‡§ğŸ‡¹ Bhutan',
  BV: 'ğŸ‡§ğŸ‡» Bouvet Island',
  BW: 'ğŸ‡§ğŸ‡¼ Botswana',
  BY: 'ğŸ‡§ğŸ‡¾ Belarus',
  BZ: 'ğŸ‡§ğŸ‡¿ Belize',
  CA: 'ğŸ‡¨ğŸ‡¦ Canada',
  CC: 'ğŸ‡¨ğŸ‡¨ Cocos (Keeling) Islands',
  CD: 'ğŸ‡¨ğŸ‡© Congo',
  CF: 'ğŸ‡¨ğŸ‡« Central African Republic',
  CG: 'ğŸ‡¨ğŸ‡¬ Congo',
  CH: 'ğŸ‡¨ğŸ‡­ Switzerland',
  CI: "ğŸ‡¨ğŸ‡® CÃ´te D'Ivoire",
  CK: 'ğŸ‡¨ğŸ‡° Cook Islands',
  CL: 'ğŸ‡¨ğŸ‡± Chile',
  CM: 'ğŸ‡¨ğŸ‡² Cameroon',
  CN: 'ğŸ‡¨ğŸ‡³ China',
  CO: 'ğŸ‡¨ğŸ‡´ Colombia',
  CR: 'ğŸ‡¨ğŸ‡· Costa Rica',
  CU: 'ğŸ‡¨ğŸ‡º Cuba',
  CV: 'ğŸ‡¨ğŸ‡» Cape Verde',
  CW: 'ğŸ‡¨ğŸ‡¼ CuraÃ§ao',
  CX: 'ğŸ‡¨ğŸ‡½ Christmas Island',
  CY: 'ğŸ‡¨ğŸ‡¾ Cyprus',
  CZ: 'ğŸ‡¨ğŸ‡¿ Czech Republic',
  DE: 'ğŸ‡©ğŸ‡ª Germany',
  DJ: 'ğŸ‡©ğŸ‡¯ Djibouti',
  DK: 'ğŸ‡©ğŸ‡° Denmark',
  DM: 'ğŸ‡©ğŸ‡² Dominica',
  DO: 'ğŸ‡©ğŸ‡´ Dominican Republic',
  DZ: 'ğŸ‡©ğŸ‡¿ Algeria',
  EC: 'ğŸ‡ªğŸ‡¨ Ecuador',
  EE: 'ğŸ‡ªğŸ‡ª Estonia',
  EG: 'ğŸ‡ªğŸ‡¬ Egypt',
  EH: 'ğŸ‡ªğŸ‡­ Western Sahara',
  ER: 'ğŸ‡ªğŸ‡· Eritrea',
  ES: 'ğŸ‡ªğŸ‡¸ Spain',
  ET: 'ğŸ‡ªğŸ‡¹ Ethiopia',
  FI: 'ğŸ‡«ğŸ‡® Finland',
  FJ: 'ğŸ‡«ğŸ‡¯ Fiji',
  FK: 'ğŸ‡«ğŸ‡° Falkland Islands (Malvinas)',
  FM: 'ğŸ‡«ğŸ‡² Micronesia',
  FO: 'ğŸ‡«ğŸ‡´ Faroe Islands',
  FR: 'ğŸ‡«ğŸ‡· France',
  GA: 'ğŸ‡¬ğŸ‡¦ Gabon',
  GB: 'ğŸ‡¬ğŸ‡§ United Kingdom',
  GD: 'ğŸ‡¬ğŸ‡© Grenada',
  GE: 'ğŸ‡¬ğŸ‡ª Georgia',
  GF: 'ğŸ‡¬ğŸ‡« French Guiana',
  GG: 'ğŸ‡¬ğŸ‡¬ Guernsey',
  GH: 'ğŸ‡¬ğŸ‡­ Ghana',
  GI: 'ğŸ‡¬ğŸ‡® Gibraltar',
  GL: 'ğŸ‡¬ğŸ‡± Greenland',
  GM: 'ğŸ‡¬ğŸ‡² Gambia',
  GN: 'ğŸ‡¬ğŸ‡³ Guinea',
  GP: 'ğŸ‡¬ğŸ‡µ Guadeloupe',
  GQ: 'ğŸ‡¬ğŸ‡¶ Equatorial Guinea',
  GR: 'ğŸ‡¬ğŸ‡· Greece',
  GS: 'ğŸ‡¬ğŸ‡¸ South Georgia',
  GT: 'ğŸ‡¬ğŸ‡¹ Guatemala',
  GU: 'ğŸ‡¬ğŸ‡º Guam',
  GW: 'ğŸ‡¬ğŸ‡¼ Guinea-Bissau',
  GY: 'ğŸ‡¬ğŸ‡¾ Guyana',
  HK: 'ğŸ‡­ğŸ‡° Hong Kong',
  HM: 'ğŸ‡­ğŸ‡² Heard Island and Mcdonald Islands',
  HN: 'ğŸ‡­ğŸ‡³ Honduras',
  HR: 'ğŸ‡­ğŸ‡· Croatia',
  HT: 'ğŸ‡­ğŸ‡¹ Haiti',
  HU: 'ğŸ‡­ğŸ‡º Hungary',
  ID: 'ğŸ‡®ğŸ‡© Indonesia',
  IE: 'ğŸ‡®ğŸ‡ª Ireland',
  IL: 'ğŸ‡®ğŸ‡± Israel',
  IM: 'ğŸ‡®ğŸ‡² Isle of Man',
  IN: 'ğŸ‡®ğŸ‡³ India',
  IO: 'ğŸ‡®ğŸ‡´ British Indian Ocean Territory',
  IQ: 'ğŸ‡®ğŸ‡¶ Iraq',
  IR: 'ğŸ‡®ğŸ‡· Iran',
  IS: 'ğŸ‡®ğŸ‡¸ Iceland',
  IT: 'ğŸ‡®ğŸ‡¹ Italy',
  JE: 'ğŸ‡¯ğŸ‡ª Jersey',
  JM: 'ğŸ‡¯ğŸ‡² Jamaica',
  JO: 'ğŸ‡¯ğŸ‡´ Jordan',
  JP: 'ğŸ‡¯ğŸ‡µ Japan',
  KE: 'ğŸ‡°ğŸ‡ª Kenya',
  KG: 'ğŸ‡°ğŸ‡¬ Kyrgyzstan',
  KH: 'ğŸ‡°ğŸ‡­ Cambodia',
  KI: 'ğŸ‡°ğŸ‡® Kiribati',
  KM: 'ğŸ‡°ğŸ‡² Comoros',
  KN: 'ğŸ‡°ğŸ‡³ Saint Kitts and Nevis',
  KP: 'ğŸ‡°ğŸ‡µ North Korea',
  KR: 'ğŸ‡°ğŸ‡· South Korea',
  KW: 'ğŸ‡°ğŸ‡¼ Kuwait',
  KY: 'ğŸ‡°ğŸ‡¾ Cayman Islands',
  KZ: 'ğŸ‡°ğŸ‡¿ Kazakhstan',
  LA: "ğŸ‡±ğŸ‡¦ Lao People's Democratic Republic",
  LB: 'ğŸ‡±ğŸ‡§ Lebanon',
  LC: 'ğŸ‡±ğŸ‡¨ Saint Lucia',
  LI: 'ğŸ‡±ğŸ‡® Liechtenstein',
  LK: 'ğŸ‡±ğŸ‡° Sri Lanka',
  LR: 'ğŸ‡±ğŸ‡· Liberia',
  LS: 'ğŸ‡±ğŸ‡¸ Lesotho',
  LT: 'ğŸ‡±ğŸ‡¹ Lithuania',
  LU: 'ğŸ‡±ğŸ‡º Luxembourg',
  LV: 'ğŸ‡±ğŸ‡» Latvia',
  LY: 'ğŸ‡±ğŸ‡¾ Libya',
  MA: 'ğŸ‡²ğŸ‡¦ Morocco',
  MC: 'ğŸ‡²ğŸ‡¨ Monaco',
  MD: 'ğŸ‡²ğŸ‡© Moldova',
  ME: 'ğŸ‡²ğŸ‡ª Montenegro',
  MF: 'ğŸ‡²ğŸ‡« Saint Martin (French Part)',
  MG: 'ğŸ‡²ğŸ‡¬ Madagascar',
  MH: 'ğŸ‡²ğŸ‡­ Marshall Islands',
  MK: 'ğŸ‡²ğŸ‡° Macedonia',
  ML: 'ğŸ‡²ğŸ‡± Mali',
  MM: 'ğŸ‡²ğŸ‡² Myanmar',
  MN: 'ğŸ‡²ğŸ‡³ Mongolia',
  MO: 'ğŸ‡²ğŸ‡´ Macao',
  MP: 'ğŸ‡²ğŸ‡µ Northern Mariana Islands',
  MQ: 'ğŸ‡²ğŸ‡¶ Martinique',
  MR: 'ğŸ‡²ğŸ‡· Mauritania',
  MS: 'ğŸ‡²ğŸ‡¸ Montserrat',
  MT: 'ğŸ‡²ğŸ‡¹ Malta',
  MU: 'ğŸ‡²ğŸ‡º Mauritius',
  MV: 'ğŸ‡²ğŸ‡» Maldives',
  MW: 'ğŸ‡²ğŸ‡¼ Malawi',
  MX: 'ğŸ‡²ğŸ‡½ Mexico',
  MY: 'ğŸ‡²ğŸ‡¾ Malaysia',
  MZ: 'ğŸ‡²ğŸ‡¿ Mozambique',
  NA: 'ğŸ‡³ğŸ‡¦ Namibia',
  NC: 'ğŸ‡³ğŸ‡¨ New Caledonia',
  NE: 'ğŸ‡³ğŸ‡ª Niger',
  NF: 'ğŸ‡³ğŸ‡« Norfolk Island',
  NG: 'ğŸ‡³ğŸ‡¬ Nigeria',
  NI: 'ğŸ‡³ğŸ‡® Nicaragua',
  NL: 'ğŸ‡³ğŸ‡± Netherlands',
  NO: 'ğŸ‡³ğŸ‡´ Norway',
  NP: 'ğŸ‡³ğŸ‡µ Nepal',
  NR: 'ğŸ‡³ğŸ‡· Nauru',
  NU: 'ğŸ‡³ğŸ‡º Niue',
  NZ: 'ğŸ‡³ğŸ‡¿ New Zealand',
  OM: 'ğŸ‡´ğŸ‡² Oman',
  PA: 'ğŸ‡µğŸ‡¦ Panama',
  PE: 'ğŸ‡µğŸ‡ª Peru',
  PF: 'ğŸ‡µğŸ‡« French Polynesia',
  PG: 'ğŸ‡µğŸ‡¬ Papua New Guinea',
  PH: 'ğŸ‡µğŸ‡­ Philippines',
  PK: 'ğŸ‡µğŸ‡° Pakistan',
  PL: 'ğŸ‡µğŸ‡± Poland',
  PM: 'ğŸ‡µğŸ‡² Saint Pierre and Miquelon',
  PN: 'ğŸ‡µğŸ‡³ Pitcairn',
  PR: 'ğŸ‡µğŸ‡· Puerto Rico',
  PS: 'ğŸ‡µğŸ‡¸ Palestinian Territory',
  PT: 'ğŸ‡µğŸ‡¹ Portugal',
  PW: 'ğŸ‡µğŸ‡¼ Palau',
  PY: 'ğŸ‡µğŸ‡¾ Paraguay',
  QA: 'ğŸ‡¶ğŸ‡¦ Qatar',
  RE: 'ğŸ‡·ğŸ‡ª RÃ©union',
  RO: 'ğŸ‡·ğŸ‡´ Romania',
  RS: 'ğŸ‡·ğŸ‡¸ Serbia',
  RU: 'ğŸ‡·ğŸ‡º Russia',
  RW: 'ğŸ‡·ğŸ‡¼ Rwanda',
  SA: 'ğŸ‡¸ğŸ‡¦ Saudi Arabia',
  SB: 'ğŸ‡¸ğŸ‡§ Solomon Islands',
  SC: 'ğŸ‡¸ğŸ‡¨ Seychelles',
  SD: 'ğŸ‡¸ğŸ‡© Sudan',
  SE: 'ğŸ‡¸ğŸ‡ª Sweden',
  SG: 'ğŸ‡¸ğŸ‡¬ Singapore',
  SH: 'ğŸ‡¸ğŸ‡­ Saint Helena',
  SI: 'ğŸ‡¸ğŸ‡® Slovenia',
  SJ: 'ğŸ‡¸ğŸ‡¯ Svalbard and Jan Mayen',
  SK: 'ğŸ‡¸ğŸ‡° Slovakia',
  SL: 'ğŸ‡¸ğŸ‡± Sierra Leone',
  SM: 'ğŸ‡¸ğŸ‡² San Marino',
  SN: 'ğŸ‡¸ğŸ‡³ Senegal',
  SO: 'ğŸ‡¸ğŸ‡´ Somalia',
  SR: 'ğŸ‡¸ğŸ‡· Suriname',
  SS: 'ğŸ‡¸ğŸ‡¸ South Sudan',
  ST: 'ğŸ‡¸ğŸ‡¹ Sao Tome and Principe',
  SV: 'ğŸ‡¸ğŸ‡» El Salvador',
  SX: 'ğŸ‡¸ğŸ‡½ Sint Maarten (Dutch Part)',
  SY: 'ğŸ‡¸ğŸ‡¾ Syrian Arab Republic',
  SZ: 'ğŸ‡¸ğŸ‡¿ Swaziland',
  TC: 'ğŸ‡¹ğŸ‡¨ Turks and Caicos Islands',
  TD: 'ğŸ‡¹ğŸ‡© Chad',
  TF: 'ğŸ‡¹ğŸ‡« French Southern Territories',
  TG: 'ğŸ‡¹ğŸ‡¬ Togo',
  TH: 'ğŸ‡¹ğŸ‡­ Thailand',
  TJ: 'ğŸ‡¹ğŸ‡¯ Tajikistan',
  TK: 'ğŸ‡¹ğŸ‡° Tokelau',
  TL: 'ğŸ‡¹ğŸ‡± Timor-Leste',
  TM: 'ğŸ‡¹ğŸ‡² Turkmenistan',
  TN: 'ğŸ‡¹ğŸ‡³ Tunisia',
  TO: 'ğŸ‡¹ğŸ‡´ Tonga',
  TR: 'ğŸ‡¹ğŸ‡· Turkey',
  TT: 'ğŸ‡¹ğŸ‡¹ Trinidad and Tobago',
  TV: 'ğŸ‡¹ğŸ‡» Tuvalu',
  TW: 'ğŸ‡¹ğŸ‡¼ Taiwan',
  TZ: 'ğŸ‡¹ğŸ‡¿ Tanzania',
  UA: 'ğŸ‡ºğŸ‡¦ Ukraine',
  UG: 'ğŸ‡ºğŸ‡¬ Uganda',
  UM: 'ğŸ‡ºğŸ‡² United States Minor Outlying Islands',
  US: 'ğŸ‡ºğŸ‡¸ United States',
  UY: 'ğŸ‡ºğŸ‡¾ Uruguay',
  UZ: 'ğŸ‡ºğŸ‡¿ Uzbekistan',
  VA: 'ğŸ‡»ğŸ‡¦ Vatican City',
  VC: 'ğŸ‡»ğŸ‡¨ Saint Vincent and The Grenadines',
  VE: 'ğŸ‡»ğŸ‡ª Venezuela',
  VG: 'ğŸ‡»ğŸ‡¬ Virgin Islands, British',
  VI: 'ğŸ‡»ğŸ‡® Virgin Islands, U.S.',
  VN: 'ğŸ‡»ğŸ‡³ Viet Nam',
  VU: 'ğŸ‡»ğŸ‡º Vanuatu',
  WF: 'ğŸ‡¼ğŸ‡« Wallis and Futuna',
  WS: 'ğŸ‡¼ğŸ‡¸ Samoa',
  YE: 'ğŸ‡¾ğŸ‡ª Yemen',
  YT: 'ğŸ‡¾ğŸ‡¹ Mayotte',
  ZA: 'ğŸ‡¿ğŸ‡¦ South Africa',
  ZM: 'ğŸ‡¿ğŸ‡² Zambia',
  ZW: 'ğŸ‡¿ğŸ‡¼ Zimbabwe',
}
